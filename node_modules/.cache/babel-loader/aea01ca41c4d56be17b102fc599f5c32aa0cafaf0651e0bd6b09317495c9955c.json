{"ast":null,"code":"var _jsxFileName = \"/home/k_tamano/workspaces/unchain_proj/domain-starter-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\nimport contractAbi from \"./utils/contractABI.json\";\nimport polygonLogo from \"./assets/polygonlogo.png\";\nimport ethLogo from \"./assets/ethlogo.png\";\nimport { networks } from \"./utils/networks\";\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = \"_UNCHAIN\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst tId = \".baker\";\nconst CONTRACT_ADDRESS = \"0x49F638B3951c6B2C6d5C2150F1417A5104f047c8\";\nconst App = () => {\n  _s();\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get Metamask -> https://metamask.io/\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const checkIfWalletrIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure  your Metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum pbject!\", ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Foundan Authorizer account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n    const chainId = await ethereum.request({\n      method: \"eth_chainId\"\n    });\n    setNetwork(networks[chainId]);\n    ethereum.on(\"chainChanged\", handleChainChnaged);\n    function handleChainChnaged(_chainId) {\n      window.location.reload();\n    }\n  };\n  const mintDomain = async () => {\n    if (!domain) {\n      return;\n    }\n    if (domain.length < 3) {\n      alert(\"DOmain must be at leatest 3 characters long!\");\n      return;\n    }\n    const price = domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting Domain: \", domain, \" with price:\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        const receipt = await tx.wait();\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const renderNotConnectedCOntainre = () => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-wallet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n        alt: \"Ninja gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        className: \"cta-button connect-wallet-button\",\n        children: \"Connect wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this);\n  };\n  const renderInputForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tId\",\n          children: [\" \", tId, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"record\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: null,\n          onClick: mintDomain,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: null,\n          onClick: null,\n          children: \"Set Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    checkIfWalletrIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Baker Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Network logo\",\n              className: \"logo\",\n              src: network.includes(\"Polygon\") ? polygonLogo : ethLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), currentAccount ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", \"Wallet: \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Not connected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), !currentAccount && renderNotConnectedCOntainre(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AXArQ1XaD9do8eDDmRH4mOsL43I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","contractAbi","polygonLogo","ethLogo","networks","TWITTER_HANDLE","TWITTER_LINK","tId","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","network","setNetwork","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletrIsConnected","length","account","chainId","on","handleChainChnaged","_chainId","location","reload","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","renderNotConnectedCOntainre","renderInputForm","e","target","includes","slice"],"sources":["/home/k_tamano/workspaces/unchain_proj/domain-starter-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\n\nimport contractAbi from \"./utils/contractABI.json\";\n\nimport polygonLogo from \"./assets/polygonlogo.png\";\nimport ethLogo from \"./assets/ethlogo.png\";\nimport { networks } from \"./utils/networks\";\n\n// Constants\nconst TWITTER_HANDLE = \"_UNCHAIN\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst tId = \".baker\";\nconst CONTRACT_ADDRESS = \"0x49F638B3951c6B2C6d5C2150F1417A5104f047c8\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"Get Metamask -> https://metamask.io/\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const checkIfWalletrIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure  your Metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum pbject!\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Foundan Authorizer account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n\n    const chainId = await ethereum.request({ method: \"eth_chainId\" });\n    setNetwork(networks[chainId]);\n\n    ethereum.on(\"chainChanged\", handleChainChnaged);\n\n    function handleChainChnaged(_chainId) {\n      window.location.reload();\n    }\n  };\n\n  const mintDomain = async () => {\n    if (!domain) {\n      return;\n    }\n\n    if (domain.length < 3) {\n      alert(\"DOmain must be at leatest 3 characters long!\");\n      return;\n    }\n\n    const price =\n      domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting Domain: \", domain, \" with price:\", price);\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          contractAbi.abi,\n          signer\n        );\n\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price),\n        });\n\n        const receipt = await tx.wait();\n\n        if (receipt.status === 1) {\n          console.log(\n            \"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash\n          );\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\n            \"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash\n          );\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderNotConnectedCOntainre = () => {\n    <div className=\"connect-wallet-container\">\n      <img\n        src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n        alt=\"Ninja gif\"\n      />\n      <button\n        onClick={connectWallet}\n        className=\"cta-button connect-wallet-button\"\n      >\n        Connect wallet\n      </button>\n    </div>;\n  };\n\n  const renderInputForm = () => {\n    return (\n      <div className=\"form-container\">\n        <div className=\"first-row\">\n          <input\n            type=\"text\"\n            value={domain}\n            placeholder=\"domain\"\n            onChange={(e) => setDomain(e.target.value)}\n          />\n          <p className=\"tId\"> {tId} </p>\n        </div>\n        <input\n          type=\"text\"\n          value={record}\n          placeholder=\"record\"\n          onChange={(e) => setRecord(e.target.value)}\n        />\n        <div className=\"button-container\">\n          <button\n            className=\"cta-button mint-button\"\n            disabled={null}\n            onClick={mintDomain}\n          >\n            Mint\n          </button>\n          <button\n            className=\"cta-button mint-button\"\n            disabled={null}\n            onClick={null}\n          >\n            Set Data\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    checkIfWalletrIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <header>\n            <div className=\"left\">\n              <p className=\"title\">🐱‍👤 Baker Name Service</p>\n              <p className=\"subtitle\">Your immortal API on the blockchain </p>\n            </div>\n            <div className=\"right\">\n              <img\n                alt=\"Network logo\"\n                className=\"logo\"\n                src={network.includes(\"Polygon\") ? polygonLogo : ethLogo}\n              />\n              {currentAccount ? (\n                <p>\n                  {\" \"}\n                  Wallet: {currentAccount.slice(0, 6)}...\n                  {currentAccount.slice(-4)}{\" \"}\n                </p>\n              ) : (\n                <p> Not connected </p>\n              )}\n            </div>\n          </header>\n        </div>\n\n        {!currentAccount && renderNotConnectedCOntainre()}\n        {currentAccount && renderInputForm()}\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {`built with @${TWITTER_HANDLE}`}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}