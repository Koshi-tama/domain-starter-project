{"ast":null,"code":"var _jsxFileName = \"/home/k_tamano/workspaces/unchain_proj/domain-starter-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { Contract, ethers } from \"ethers\";\nimport contractAbi from \"./utils/contractABI.json\";\nimport polygonLogo from \"./assets/polygonlogo.png\";\nimport ethLogo from \"./assets/ethlogo.png\";\nimport { networks } from \"./utils/networks\";\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = \"_UNCHAIN\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst tId = \".baker\";\nconst CONTRACT_ADDRESS = \"0x49F638B3951c6B2C6d5C2150F1417A5104f047c8\";\nconst App = () => {\n  _s();\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [mints, setMints] = useState([]);\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get Metamask -> https://metamask.io/\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const switcNetwork = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{\n            chainId: \"0x13881\"\n          }]\n        });\n      } catch (error) {\n        if (error.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [{\n                chainId: \"0x13881\",\n                chainName: \"Polygon Mumbai Testnet\",\n                rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Mumbai Matic\",\n                  symbol: \"MATIC\",\n                  decimals: 18\n                },\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n              }]\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    } else {\n      alert(\"MetaMask is not installed. Please install it to use this app: https://metamask.io/download.html\");\n    }\n  };\n  const checkIfWalletrIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure  your Metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum pbject!\", ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Foundan Authorizer account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n    const chainId = await ethereum.request({\n      method: \"eth_chainId\"\n    });\n    setNetwork(networks[chainId]);\n    ethereum.on(\"chainChanged\", handleChainChnaged);\n    function handleChainChnaged(_chainId) {\n      window.location.reload();\n    }\n  };\n  const mintDomain = async () => {\n    if (!domain) {\n      return;\n    }\n    if (domain.length < 3) {\n      alert(\"DOmain must be at leatest 3 characters long!\");\n      return;\n    }\n    const price = domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting Domain: \", domain, \" with price:\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        const receipt = await tx.wait();\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchMints = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        const names = await contract.getAllNames();\n        const mintRecords = await Promise.all(names.map(async name => {\n          const mintRecord = await contract.records(name);\n          const owner = await contract.domains(name);\n          return {\n            id: names.indexOf(name),\n            name: name,\n            record: mintRecord,\n            owner: owner\n          };\n        }));\n        console.log(\"MINTS FETCHED \", mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateDOmain = async () => {\n    if (!record || !domain) {\n      return;\n    }\n    setLoading(true);\n    console.log(\"Updating domain\", domain, \"with record\", record);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        let tx = await contract.setRecord(domain, record);\n        await tx.wait();\n        console.log(\"Record set https://mumbai.polygonscan.com/tx/\" + tx.hash);\n        fetchMints();\n        setRecord(\"\");\n        setDomain(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const renderNotConnectedCOntainre = () => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-wallet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n        alt: \"Ninja gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        className: \"cta-button connect-wallet-button\",\n        children: \"Connect wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, this);\n  };\n  const renderInputForm = () => {\n    if (network !== \"Polygon Mumbai Testnet\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Please switc tp Polygopn Mumbai Testnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: switcNetwork,\n          children: \"Click here to switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tId\",\n          children: [\" \", tId, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"record\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: loading,\n          onClick: updateDOmain,\n          children: \"Set record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: () => {\n            setEditing(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-button mint-button\",\n        disabled: loading,\n        onClick: mintDomain,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    checkIfWalletrIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Baker Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Network logo\",\n              className: \"logo\",\n              src: network.includes(\"Polygon\") ? polygonLogo : ethLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), currentAccount ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", \"Wallet: \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Not connected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), !currentAccount && renderNotConnectedCOntainre(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TWiSwiQIqTj0yehKyBT3hxKEh+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","Contract","ethers","contractAbi","polygonLogo","ethLogo","networks","TWITTER_HANDLE","TWITTER_LINK","tId","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","network","setNetwork","editing","setEditing","loading","setLoading","mints","setMints","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","switcNetwork","params","chainId","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","checkIfWalletrIsConnected","length","account","on","handleChainChnaged","_chainId","location","reload","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","fetchMints","names","getAllNames","mintRecords","Promise","all","map","mintRecord","records","owner","domains","id","indexOf","updateDOmain","renderNotConnectedCOntainre","renderInputForm","e","target","includes","slice"],"sources":["/home/k_tamano/workspaces/unchain_proj/domain-starter-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { Contract, ethers } from \"ethers\";\n\nimport contractAbi from \"./utils/contractABI.json\";\n\nimport polygonLogo from \"./assets/polygonlogo.png\";\nimport ethLogo from \"./assets/ethlogo.png\";\nimport { networks } from \"./utils/networks\";\n\n// Constants\nconst TWITTER_HANDLE = \"_UNCHAIN\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst tId = \".baker\";\nconst CONTRACT_ADDRESS = \"0x49F638B3951c6B2C6d5C2150F1417A5104f047c8\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n\n  const [editing, setEditing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [mints, setMints] = useState([]);\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"Get Metamask -> https://metamask.io/\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const switcNetwork = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: \"0x13881\" }],\n        });\n      } catch (error) {\n        if (error.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [\n                {\n                  chainId: \"0x13881\",\n                  chainName: \"Polygon Mumbai Testnet\",\n                  rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\n                  nativeCurrency: {\n                    name: \"Mumbai Matic\",\n                    symbol: \"MATIC\",\n                    decimals: 18,\n                  },\n                  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n                },\n              ],\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"MetaMask is not installed. Please install it to use this app: https://metamask.io/download.html\"\n      );\n    }\n  };\n\n  const checkIfWalletrIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure  your Metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum pbject!\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Foundan Authorizer account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n\n    const chainId = await ethereum.request({ method: \"eth_chainId\" });\n    setNetwork(networks[chainId]);\n\n    ethereum.on(\"chainChanged\", handleChainChnaged);\n\n    function handleChainChnaged(_chainId) {\n      window.location.reload();\n    }\n  };\n\n  const mintDomain = async () => {\n    if (!domain) {\n      return;\n    }\n\n    if (domain.length < 3) {\n      alert(\"DOmain must be at leatest 3 characters long!\");\n      return;\n    }\n\n    const price =\n      domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting Domain: \", domain, \" with price:\", price);\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          contractAbi.abi,\n          signer\n        );\n\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price),\n        });\n\n        const receipt = await tx.wait();\n\n        if (receipt.status === 1) {\n          console.log(\n            \"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash\n          );\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\n            \"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash\n          );\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchMints = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          contractAbi.abi,\n          signer\n        );\n\n        const names = await contract.getAllNames();\n\n        const mintRecords = await Promise.all(\n          names.map(async (name) => {\n            const mintRecord = await contract.records(name);\n            const owner = await contract.domains(name);\n            return {\n              id: names.indexOf(name),\n              name: name,\n              record: mintRecord,\n              owner: owner,\n            };\n          })\n        );\n        console.log(\"MINTS FETCHED \", mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateDOmain = async () => {\n    if (!record || !domain) {\n      return;\n    }\n    setLoading(true);\n    console.log(\"Updating domain\", domain, \"with record\", record);\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          contractAbi.abi,\n          signer\n        );\n        let tx = await contract.setRecord(domain, record);\n        await tx.wait();\n        console.log(\"Record set https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n        fetchMints();\n        setRecord(\"\");\n        setDomain(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const renderNotConnectedCOntainre = () => {\n    <div className=\"connect-wallet-container\">\n      <img\n        src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n        alt=\"Ninja gif\"\n      />\n      <button\n        onClick={connectWallet}\n        className=\"cta-button connect-wallet-button\"\n      >\n        Connect wallet\n      </button>\n    </div>;\n  };\n\n  const renderInputForm = () => {\n    if (network !== \"Polygon Mumbai Testnet\") {\n      return (\n        <div className=\"connect-wallet-container\">\n          <h2>Please switc tp Polygopn Mumbai Testnet</h2>\n          <button className=\"cta-button mint-button\" onClick={switcNetwork}>\n            Click here to switch\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"form-container\">\n        <div className=\"first-row\">\n          <input\n            type=\"text\"\n            value={domain}\n            placeholder=\"domain\"\n            onChange={(e) => setDomain(e.target.value)}\n          />\n          <p className=\"tId\"> {tId} </p>\n        </div>\n        <input\n          type=\"text\"\n          value={record}\n          placeholder=\"record\"\n          onChange={(e) => setRecord(e.target.value)}\n        />\n        {editing ? (\n          <div className=\"button-container\">\n            <button\n              className=\"cta-button mint-button\"\n              disabled={loading}\n              onClick={updateDOmain}\n            >\n              Set record\n            </button>\n            <button\n              className=\"cta-button mint-button\"\n              onClick={() => {\n                setEditing(false);\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            className=\"cta-button mint-button\"\n            disabled={loading}\n            onClick={mintDomain}\n          >\n            Mint\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    checkIfWalletrIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <header>\n            <div className=\"left\">\n              <p className=\"title\">🐱‍👤 Baker Name Service</p>\n              <p className=\"subtitle\">Your immortal API on the blockchain </p>\n            </div>\n            <div className=\"right\">\n              <img\n                alt=\"Network logo\"\n                className=\"logo\"\n                src={network.includes(\"Polygon\") ? polygonLogo : ethLogo}\n              />\n              {currentAccount ? (\n                <p>\n                  {\" \"}\n                  Wallet: {currentAccount.slice(0, 6)}...\n                  {currentAccount.slice(-4)}{\" \"}\n                </p>\n              ) : (\n                <p> Not connected </p>\n              )}\n            </div>\n          </header>\n        </div>\n\n        {!currentAccount && renderNotConnectedCOntainre()}\n        {currentAccount && renderInputForm()}\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {`built with @${TWITTER_HANDLE}`}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}